version: '3.2'

services:
#  recognition-worker:
#    build:
#      context: "./ML/"
#    depends_on:
#      - redis

  web:
    build:
      context: "./web/"
    command: gunicorn web.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
      - "./web/.env"
    volumes:
      - static_volume:/usr/src/app/static
    environment:
      DEBUG: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.idmyteam.rule=Host(`localhost`)"
      - "traefik.http.routers.idmyteam.entrypoints=web"
      - "traefik.http.services.idmyteam.loadbalancer.server.port=8000"
    depends_on:
      - db

  static:
    image: nginx
    volumes:
      - static_volume:/usr/share/nginx/html/static:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.idmyteam-static.rule=Host(`localhost`) && PathPrefix(`/static/`)"
      - "traefik.http.routers.idmyteam-static.entrypoints=web"
      - "traefik.http.services.idmyteam-static.loadbalancer.server.port=80"

  db:
    image: postgres
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_DATABASE: idmyteam
      POSTGRES_USER: idmyteam
      POSTGRES_PASSWORD: idmyteam
    tty: true

  redis:
    image: "redis:alpine"
    ports:
      - "127.0.0.1:6379:6379"
    entrypoint: redis-server --appendonly yes

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "127.0.0.1:16686:16686"
      - "127.0.0.1:14268:14268"
    environment:
      JAEGER_REPORTER_LOG_SPANS: "true"
    command:
      - "--log-level=debug"

  traefik:
    image: "traefik:v2.2"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--tracing=true"
      - "--tracing.serviceName=traefik"
      - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
      - "--tracing.jaeger.collector.endpoint=http://jaeger:14268/api/traces?format=jaeger.thrift"
      - "--tracing.jaeger.gen128Bit"
      - "--tracing.jaeger.propagation=b3"
    ports:
      - "80:80"
      - "8080:8080"
    depends_on:
      - jaeger
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  static_volume: