name: ID My Team Server
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

      - name: Test web
        run: |
          docker-compose up test-web

      - name: Upload web coverage to Codecov
        if: github.ref == 'refs/heads/master'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  publish-pypi:
    name: Publish PyPi
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        id: version
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build dists
        run: |
          pip3 install setuptools
          sed -i -e "s/REPLACEDINCI/${{ steps.version.outputs.new_tag }}/g" web/idmyteam/idmyteam/__init__.py
          cd web/idmyteam/
          python3 setup.py sdist
          
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          verify_metadata: false
          verbose: true
          packages_dir: web/idmyteam/dist

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set Docker Tags
        id: prep
        run: |
          TAGS="${{ github.repository }}:sha-${GITHUB_SHA::7},${{ github.repository }}:latest"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: web/
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/amd64,linux/arm/v7
          build-args: |
            COMMIT_HASH=${{ github.sha }}

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: azure/setup-helm@v1
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Upgrade helm
        run: |
          # pull infra charts
          helm repo add maxisme https://${{ secrets.GH_PA_TOKEN }}@raw.githubusercontent.com/maxisme/infra/master/k8s/charts/
          helm repo update

          # create kube config
          mkdir ~/.kube
          echo "${{ secrets.B64_KUBE_CONFIG }}" | base64 --decode > ~/.kube/config

          # deploy helms
          helm upgrade idmyteam maxisme/web -f helm-values.yml --set="image.tag=sha-${GITHUB_SHA::7}" --atomic --timeout 120s

          # clean up
          rm ~/.kube/config
